{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","chips","setChips","inputWidth","setInputWidth","style","display","gap","width","flexWrap","map","value","index","Chip","label","TextField","onInput","target","size","length","split","onKeyDown","key","console","log","removeChip","filter","chip","indexOf","inputProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAwDeA,MApDf,WAAgB,IAAD,EACaC,mBAAmB,IADhC,mBACNC,EADM,KACCC,EADD,OAEuBF,mBAAiB,GAFxC,mBAENG,EAFM,KAEMC,EAFN,KAmCb,OACE,sBAAKC,MAAO,CAAEC,QAAS,OAAQC,IAAK,EAAGC,MAAO,MAAOC,SAAU,QAA/D,UACGR,EAAMS,KAAI,SAACC,EAAOC,GAAR,OACT,cAACC,EAAA,EAAD,CAAMC,MAAOH,GAAYC,MAE3B,cAACG,EAAA,EAAD,CACAC,QArCgB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,OAGrB,GAFAb,GAAc,SAAAc,GAAI,OAAIA,EAAO,KACF,IAAxBD,EAAON,MAAMQ,QAAcf,EAAc,GACE,MAA1Ca,EAAON,MAAMM,EAAON,MAAMQ,OAAS,GAAY,CACjD,GAAmC,KAA/BF,EAAON,MAAMS,MAAM,KAAK,GAE1B,YADAH,EAAON,MAAQ,IAGjBT,EAAS,GAAD,mBAAKD,GAAL,CAAYgB,EAAON,MAAMS,MAAM,KAAK,MAC5CH,EAAON,MAAQ,GACfP,EAAc,KA4BdiB,UAxBkB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,IAAKL,EAAkB,EAAlBA,OAE5B,GAAW,cAARK,GAAuBL,EAAON,MAAMQ,OAAS,EAG9C,OAFAf,GAAc,SAAAc,GAAI,OAAIA,EAAO,UAC7BK,QAAQC,IAAIrB,GAId,GAAY,cAARmB,EAAqB,CACvB,IAAMG,EAAaxB,EAAMyB,QACvB,SAACC,EAAMf,EAAOX,GAAd,OAAwBW,IAAUX,EAAM2B,QAAQD,MAElDzB,EAASuB,KAaTI,WAAY,CACVxB,MAAO,CACLG,MAAM,GAAD,OAAKL,EAAL,cC7Cf2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bb897ccf.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Chip } from \"@material-ui/core\";\n\nfunction App() {\n  const [chips, setChips] = useState<string[]>([]);\n  const [inputWidth, setInputWidth] = useState<number>(2);\n\n  const handleInput = ({ target }: any )=> {\n    setInputWidth(size => size + 1);\n    if(target.value.length === 0) setInputWidth(2);\n    if (target.value[target.value.length - 1] === \",\") {\n      if (target.value.split(\",\")[0] === \"\") {\n        target.value = \"\";\n        return;\n      }\n      setChips([...chips, target.value.split(\",\")[0]]);\n      target.value = \"\";\n      setInputWidth(2);\n    }\n  };\n\n  const handleKeyDown = ({ key, target }: any) => {\n\n    if(key === 'Backspace' && target.value.length > 0) {\n      setInputWidth(size => size - 1);\n      console.log(inputWidth)\n      return ;\n    }\n\n    if (key === \"Backspace\") {\n      const removeChip = chips.filter(\n        (chip, index, chips) => index !== chips.indexOf(chip)\n      );\n      setChips(removeChip);\n    }\n\n  };\n\n  return (\n    <div style={{ display: \"flex\", gap: 5, width: '30%', flexWrap: 'wrap'}}>\n      {chips.map((value, index) => (\n        <Chip label={value} key={index} />\n      ))}\n      <TextField \n      onInput={handleInput} \n      onKeyDown={handleKeyDown} \n      inputProps={{\n        style: {\n          width: `${inputWidth}ch`\n        }\n      }}/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}